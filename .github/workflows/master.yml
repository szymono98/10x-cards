name: Deploy to Cloudflare Pages

on:
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check code formatting
        id: prettier-check
        run: npx prettier --check --ignore-path .gitignore . || echo "Formatting issues detected"
        continue-on-error: true

      - name: Generate format report
        if: steps.prettier-check.outcome == 'failure'
        run: |
          echo "::warning::Code style issues found. Consider running 'npm run format:fix' locally."
          echo "Files with formatting issues:" > format-report.txt
          npx prettier --list-different --ignore-path .gitignore . >> format-report.txt
          cat format-report.txt

      - name: Upload format report
        if: steps.prettier-check.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: format-report
          path: format-report.txt
          retention-days: 5

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: production
    env:
      NODE_ENV: test
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
          npm ci

      - name: Run unit tests
        run: npm run test

  deploy:
    name: Deploy to Cloudflare Pages
    needs: [lint, test]
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      deployments: write

    env:
      NODE_ENV: production
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -D tailwindcss postcss autoprefixer
          npm ci --include=dev
          npm install -g wrangler@3

      - name: Generate CSS
        run: npx tailwindcss -i ./src/app/globals.css -o ./src/styles/output.css

      - name: Build production
        run: npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: |
            pages deployment create --project-name=10x-cards \
              --env NEXT_PUBLIC_SUPABASE_URL="${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" \
              --env NEXT_PUBLIC_SUPABASE_ANON_KEY="${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" \
              --env OPENROUTER_API_KEY="${{ secrets.OPENROUTER_API_KEY }}" \
              --commit-dirty=true ./out
          wranglerVersion: '3'
